" :help <foobar> for explanations

source ~/.vim/plugins.vim
source ~/.vim/filetypes.vim
source ~/.vim/key_mappings.vim

" enable true-color output
" https://gist.github.com/XVilka/8346728
set termguicolors
" see ":help xterm-true-color", our $TERM needs this
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"

" TODO: Check out features intensively
" https://github.com/rakr/vim-one
colorscheme one
set background=light

set colorcolumn=81
set textwidth=80
set number
set cursorline
set nowrap
set fillchars+=vert:â”‚ " nicer vertical line
set backspace=indent,eol,start " backspace as expected
set grepprg=rg\ --vimgrep\ --smart-case " ripgrep has to be installed
set timeoutlen=3000 " Give me more time remembering my complex mappings ;-)
set hidden " hide a buffer instead of closing it
           " â‡’ switch buffers even with the actual unsaved
set autoread
set list
set listchars=tab:â–¸Â·,trail:Â·,precedes:â—…,extends:â–»,nbsp:â€¢
set nofoldenable

" TODO: does not work yet inside tmux
" https://stackoverflow.com/questions/15123477/tmux-tabs-with-name-of-file-open-in-vim
set title

" Indentation http://vim.wikia.com/wiki/Indenting_source_code
set expandtab " expand tab key presses to spaces
set softtabstop=2 " tabstops are two spaces
set shiftwidth=2 " width of autoindentation

" Searching
set hlsearch
set incsearch
set ignorecase
set smartcase

" Mouse
set mouse=a
set ttymouse=xterm2 " resize splits with mouse when inside tmux session

" ALE
let g:ale_sign_error = 'â˜ '
let g:ale_sign_warning = 'ðŸš½'
let g:ale_echo_msg_error_str = 'â˜  '
let g:ale_echo_msg_warning_str = 'ðŸš½ '
let g:ale_echo_msg_format = '%severity% %code: %%s'

" Airline
let g:airline_powerline_fonts=1
let g:airline#parts#ffenc#skip_expected_string='utf-8[unix]'
let g:airline_skip_empty_sections = 1
let g:airline#extensions#ale#error_symbol =  'â˜   '
let g:airline#extensions#ale#warning_symbol = 'ðŸš½ '

set noshowmode " airline now shows the active mode
autocmd WinLeave * :let w:airline_render_right=0

" vim-gitgutter
set updatetime=100 " show the git changes earlier

let test#strategy = 'vimterminal'

" NERDTree
let g:NERDTreeAutoDeleteBuffer=1
let g:NERDTreeQuitOnOpen=1
let g:NERDTreeHijackNetrw=0 " NERDTree annoys me when using 'vim .'

" Close Vim if the only window left open is a NERDTree
autocmd BufEnter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" Strip trailing whitespace when saving files
autocmd BufWritePre * :%s/\s\+$//e

" CtrlP
let g:ctrlp_user_command = 'rg %s --files --follow --color=never --glob ""'
let g:ctrlp_use_caching = 0
let g:ctrlp_mruf_relative = 1
